import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author monkey
 */
public class VistaHorarios extends javax.swing.JFrame {
    
    ArrayList <Horario> soluciones;
    
    /**
     * Creates new form Res
     */
    public VistaHorarios() {
        initComponents();
        setLocationRelativeTo (null);
        
    }
    
    public void ejecuta(ArrayList <Horario> s){
        
        soluciones=s;
        jLabel1.setText("Generados "+s.size()+" horarios");
        
        Collections.sort(soluciones);
        Dibuja(soluciones.get(0));  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton4 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("monkey! Generador de horarios");
        setIconImage(new ImageIcon("monkey.png").getImage());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00", null, null, null, null, null, null, null},
                {"08:30", null, null, null, null, null, null, null},
                {"09:00", null, null, null, null, null, null, null},
                {"09:30", null, null, null, null, null, null, null},
                {"10:00", null, null, null, null, null, null, null},
                {"10:30", null, null, null, null, null, null, null},
                {"11:00", null, null, null, null, null, null, null},
                {"11:30", null, null, null, null, null, null, null},
                {"12:00", null, null, null, null, null, null, null},
                {"12:30", null, null, null, null, null, null, null},
                {"13:00", null, null, null, null, null, null, null},
                {"13:30", null, null, null, null, null, null, null},
                {"14:00", null, null, null, null, null, null, null},
                {"14:30", null, null, null, null, null, null, null},
                {"15:00", null, null, null, null, null, null, null},
                {"15:30", null, null, null, null, null, null, null},
                {"16:00", null, null, null, null, null, null, null},
                {"16:30", null, null, null, null, null, null, null},
                {"17:00", null, null, null, null, null, null, null},
                {"17:30", null, null, null, null, null, null, null},
                {"18:00", null, null, null, null, null, null, null},
                {"18:30", null, null, null, null, null, null, null},
                {"19:00", null, null, null, null, null, null, null},
                {"19:30", null, null, null, null, null, null, null},
                {"20:00", null, null, null, null, null, null, null},
                {"20:30", null, null, null, null, null, null, null},
                {"21:00", null, null, null, null, null, null, null},
                {"21:30", null, null, null, null, null, null, null},
                {"22:00", null, null, null, null, null, null, null},
                {"22:30", null, null, null, null, null, null, null},
                {"23:00", null, null, null, null, null, null, null}
            },
            new String [] {
                "Hora", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setResizable(false);

        jLabel1.setText("Horarios generados");

        jLabel2.setText("Mostrar horario:");

        jTextField2.setText("1");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Anterior");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Siguiente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane2.setEnabled(false);

        jTextPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jTextPane1.setBorder(null);
        jTextPane1.setEditable(false);
        jScrollPane2.setViewportView(jTextPane1);

        jButton4.setText("Exportar este horario");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonExportar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        actualizaHorario();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
       
        actualizaHorario();
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
//            actualizaHorario();
//        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        int seleccion = Integer.parseInt(jTextField2.getText())-1;
        
        if (seleccion > 0){
            String a="";
            a+=seleccion;
            jTextField2.setText(a);
            actualizaHorario();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int seleccion = Integer.parseInt(jTextField2.getText());
        
        if (seleccion < soluciones.size()){
            seleccion++;
            String a="";
            a+=seleccion;
            jTextField2.setText(a);
            actualizaHorario();
        }
    }//GEN-LAST:event_jButton3ActionPerformed
String ExportDia(int d){
        String res;
        
        switch (d){
                case 1: res="MO"; break;
                case 2: res="TU"; break;
                case 3: res="WE"; break;
                case 4: res="TH"; break;
                case 5: res="FR"; break;
                case 6: res="SA"; break;
               default: res="SU"; break;
        }
        
        return res;
    }
    
    String ExportHora(int h){
        String res; 
        switch (h){
            case  0: res="T080000"; break;
            case  1: res="T083000"; break;
            case  2: res="T090000"; break;
            case  3: res="T093000"; break;
            case  4: res="T100000"; break;
            case  5: res="T103000"; break;
            case  6: res="T110000"; break;
            case  7: res="T113000"; break;
            case  8: res="T120000"; break;
            case  9: res="T123000"; break;
            case 10: res="T130000"; break;
            case 11: res="T133000"; break;
            case 12: res="T140000"; break;
            case 13: res="T143000"; break;
            case 14: res="T150000"; break;
            case 15: res="T153000"; break;
            case 16: res="T160000"; break;
            case 17: res="T163000"; break;
            case 18: res="T170000"; break;
            case 19: res="T173000"; break;
            case 20: res="T180000"; break;
            case 21: res="T183000"; break;
            case 22: res="T190000"; break;
            case 23: res="T193000"; break;
            case 24: res="T200000"; break;
            case 25: res="T203000"; break;
            case 26: res="T210000"; break;
            case 27: res="T213000"; break;
            case 28: res="T220000"; break;
            case 29: res="T223000"; break;
            default: res="T230000"; break;
        }
        return res;
    }
    
    String ExportFecha(int d){
        switch (d) {
            case 1: return "02";
            case 2: return "03";
            case 3: return "04";
            case 4: return "05";
            case 5: return "06";
            case 6: return "07";
           default: return "08";
        }
    }
    private void BotonExportar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonExportar
      
        Clase[] horario=soluciones.get(Integer.parseInt(jTextField2.getText())-1).clases;
        
        
        String export="BEGIN:VCALENDAR\r\n";
        for (int i=0; i < horario.length; i++){
            export += "BEGIN:VEVENT\r\nSUMMARY:"+horario[i].asig
                    + "\r\nDTSTART;TZID=Europe/Madrid:201201"+ExportFecha(horario[i].dia)+ExportHora(horario[i].horaini)
                    + "\r\nDTEND;TZID=Europe/Madrid:201201"+ExportFecha(horario[i].dia)+ExportHora(horario[i].horafin)
                    + "\r\nRRULE:FREQ=WEEKLY;BYDAY="+ExportDia(horario[i].dia)+"\r\nEND:VEVENT\r\n";
        }
        export += "END:VCALENDAR";
       
        
        
        javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
        File f = new File("horario.ics"); 
        jF1.setSelectedFile(f); 
        try{ 
            if(jF1.showSaveDialog(null)==JFileChooser.APPROVE_OPTION)
            { 
                String direccion = jF1.getSelectedFile().getAbsolutePath(); 
                FileWriter  Guardx=new FileWriter(direccion);
                Guardx.write(export);
                Guardx.close(); 
                JOptionPane.showMessageDialog(this,"Exportado correctamente. ","Exportar",JOptionPane.INFORMATION_MESSAGE);
//                if(new File(direccion).exists())
//                { 
//                    if(0 == JOptionPane.showConfirmDialog(this,"El fichero existe, ¿deseas reemplazarlo?","Fichero existente",JOptionPane.YES_NO_OPTION)){
//                    
//                    }
//                } 
            }

        }catch (Exception ex){ 

            System.err.println("Fallo al guardar.");

        } 
        
    }//GEN-LAST:event_BotonExportar

    void actualizaHorario(){
        
        int seleccion = Integer.parseInt(jTextField2.getText())-1;
        
        if (seleccion > -1 && seleccion< soluciones.size()){
            Dibuja(soluciones.get(seleccion));
        }
    }
         
    
    public void Dibuja(Horario h){
        
        DefaultTableModel temp = (DefaultTableModel) jTable1.getModel();
        Clase[] c= h.clases;
        
        //Limpia
        for (int i=1; i < 8; i++){
            for (int j=0; j < 31; j++) {
                temp.setValueAt("",j,i);
            }
        }
        
        //Dibuja
        for (int i=0; i < c.length; i++){
            temp.setValueAt(c[i].asig, c[i].horaini, c[i].dia);
            for (int j=c[i].horaini+1; j < c[i].horafin ; j++) {
                temp.setValueAt("-", j, c[i].dia);
            }
        }
        jTextPane1.setText("Dias con clases:\n"
                       +h.totaldias
                       +"\n\nAsignaturas:\n"
                       +h.dias[0].numasignaturas+","
                       +h.dias[1].numasignaturas+","
                       +h.dias[2].numasignaturas+","
                       +h.dias[3].numasignaturas+","
                       +h.dias[4].numasignaturas+","
                       +h.dias[5].numasignaturas+","
                       +h.dias[6].numasignaturas
                       +"\n\nMedias-horas en la uni: \n"
                       +h.dias[0].tiempoEnLaUni+"+"
                       +h.dias[1].tiempoEnLaUni+"+"
                       +h.dias[2].tiempoEnLaUni+"+"
                       +h.dias[3].tiempoEnLaUni+"+"
                       +h.dias[4].tiempoEnLaUni+"+"
                       +h.dias[5].tiempoEnLaUni+"+"
                       +h.dias[6].tiempoEnLaUni+"="
                       +h.tiempoEnLaUni
                       +"\n\nMedias-horas muertas:\n"
                       +h.dias[0].horasmuertas+"+"
                       +h.dias[1].horasmuertas+"+"
                       +h.dias[2].horasmuertas+"+"
                       +h.dias[3].horasmuertas+"+"
                       +h.dias[4].horasmuertas+"+"
                       +h.dias[5].horasmuertas+"+"
                       +h.dias[6].horasmuertas+"="
                       +h.horasmuertas
                       +"\n\nMedia y desviacion hora de entrada;\n"
                       +h.mediaEntrada+", "+h.desviacionHoraEntrada
                       +"\n\nMedia y desviacion num asignaturas:\n"
                       +h.mediasig+", "+h.desviacionNumAsignaturas
                       +"\n\nDias tiempo para comer:\n"
                       +h.diasconlahoradelacomidalibre
                   );
    }
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new VistaHorarios().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
